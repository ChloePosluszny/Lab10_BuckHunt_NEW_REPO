


ARM Macro Assembler    Page 1 


    1 00000000         ; LCD.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         
    5 00000000         ; Runs on TM4C123
    6 00000000         ; Use SSI0 to send an 8-bit code to the ST7735 160x128 p
                       ixel LCD.
    7 00000000         
    8 00000000         ; As part of Lab 7, students need to implement these wri
                       tecommand and writedata
    9 00000000         ; This driver assumes two low-level LCD functions
   10 00000000         
   11 00000000         ; Backlight (pin 10) connected to +3.3 V
   12 00000000         ; MISO (pin 9) unconnected
   13 00000000         ; SCK (pin 8) connected to PA2 (SSI0Clk)
   14 00000000         ; MOSI (pin 7) connected to PA5 (SSI0Tx)
   15 00000000         ; TFT_CS (pin 6) connected to PA3 (SSI0Fss)
   16 00000000         ; CARD_CS (pin 5) unconnected
   17 00000000         ; Data/Command (pin 4) connected to PA6 (GPIO)
   18 00000000         ; RESET (pin 3) connected to PA7 (GPIO)
   19 00000000         ; VCC (pin 2) connected to +3.3 V
   20 00000000         ; Gnd (pin 1) connected to ground
   21 00000000         
   22 00000000 400043FC 
                       GPIO_PORTA_DATA_R
                               EQU              0x400043FC
   23 00000000 400073FC 
                       GPIO_PORTD_DATA_R
                               EQU              0x400073FC
   24 00000000 40008008 
                       SSI0_DR_R
                               EQU              0x40008008
   25 00000000 4000800C 
                       SSI0_SR_R
                               EQU              0x4000800C
   26 00000000         
   27 00000000                 EXPORT           writecommand
   28 00000000                 EXPORT           writedata
   29 00000000         
   30 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   31 00000000                 THUMB
   32 00000000                 ALIGN
   33 00000000         
   34 00000000         ; The Data/Command pin must be valid when the eighth bit
                        is
   35 00000000         ; sent.  The SSI module has hardware input and output FI
                       FOs
   36 00000000         ; that are 8 locations deep.  Based on the observation t
                       hat
   37 00000000         ; the LCD interface tends to send a few commands and the
                       n a
   38 00000000         ; lot of data, the FIFOs are not used when writing
   39 00000000         ; commands, and they are used when writing data.  This
   40 00000000         ; ensures that the Data/Command pin status matches the b
                       yte
   41 00000000         ; that is actually being transmitted.



ARM Macro Assembler    Page 2 


   42 00000000         ; The write command operation waits until all data has b
                       een
   43 00000000         ; sent, configures the Data/Command pin for commands, se
                       nds
   44 00000000         ; the command, and then waits for the transmission to
   45 00000000         ; finish.
   46 00000000         ; The write data operation waits until there is room in 
                       the
   47 00000000         ; transmit FIFO, configures the Data/Command pin for dat
                       a,
   48 00000000         ; and then adds the data to the transmit FIFO.
   49 00000000         ; NOTE: These functions will crash or stall indefinitely
                        if
   50 00000000         ; the SSI0 module is not initialized and enabled.
   51 00000000         
   52 00000000         ; This is a helper function that sends an 8-bit command 
                       to the LCD.
   53 00000000         ; Input: R0  8-bit command to transmit
   54 00000000         ; Output: none
   55 00000000         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   56 00000000         writecommand
   57 00000000         ;; --UUU-- Code to write a command to the LCD
   58 00000000         ;1) Read SSI0_SR_R and check bit 4, 
   59 00000000         ;2) If bit 4 is high, loop back to step 1 (wait for BUSY
                        bit to be low)
   60 00000000         ;3) Clear D/C=PA6 to zero
   61 00000000         ;4) Write the command to SSI0_DR_R
   62 00000000         ;5) Read SSI0_SR_R and check bit 4, 
   63 00000000         ;6) If bit 4 is high, loop back to step 5 (wait for BUSY
                        bit to be low)
   64 00000000         
   65 00000000         LoopLCD1
   66 00000000 4913            LDR              R1,= SSI0_SR_R
   67 00000002 680A            LDR              R2, [R1]
   68 00000004 EA4F 1212       LSR              R2, R2, #4
   69 00000008 F002 0201       AND              R2, R2, #1
   70 0000000C 1C12            ADDS             R2, R2, #0
   71 0000000E D1F7            BNE              LoopLCD1
   72 00000010         
   73 00000010 4910            LDR              R1, =GPIO_PORTA_DATA_R
   74 00000012 680A            LDR              R2, [R1]
   75 00000014 F022 0240       BIC              R2, #0x40
   76 00000018 600A            STR              R2, [R1]
   77 0000001A         
   78 0000001A 490F            LDR              R1, =SSI0_DR_R
   79 0000001C 7008            STRB             R0, [R1]
   80 0000001E         
   81 0000001E         
   82 0000001E         
   83 0000001E         
   84 0000001E         LoopLCD2
   85 0000001E 490C            LDR              R1,= SSI0_SR_R
   86 00000020 680A            LDR              R2, [R1]
   87 00000022 EA4F 1212       LSR              R2, R2, #4
   88 00000026 F002 0201       AND              R2, R2, #1
   89 0000002A 1C12            ADDS             R2, R2, #0
   90 0000002C D1F7            BNE              LoopLCD2
   91 0000002E         



ARM Macro Assembler    Page 3 


   92 0000002E         
   93 0000002E         
   94 0000002E         
   95 0000002E         
   96 0000002E         
   97 0000002E         
   98 0000002E 4770            BX               LR          ;   return
   99 00000030         
  100 00000030         ; This is a helper function that sends an 8-bit data to 
                       the LCD.
  101 00000030         ; Input: R0  8-bit data to transmit
  102 00000030         ; Output: none
  103 00000030         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
  104 00000030         writedata
  105 00000030         ;; --UUU-- Code to write data to the LCD
  106 00000030         ;1) Read SSI0_SR_R and check bit 1, 
  107 00000030         ;2) If bit 1 is low loop back to step 1 (wait for TNF bi
                       t to be high)
  108 00000030         ;3) Set D/C=PA6 to one
  109 00000030         ;4) Write the 8-bit data to SSI0_DR_R
  110 00000030         LoopLCD3
  111 00000030 4907            LDR              R1, =SSI0_SR_R
  112 00000032 680A            LDR              R2,[R1]
  113 00000034 EA4F 0252       LSR              R2, #1
  114 00000038 F002 0201       AND              R2, R2, #1
  115 0000003C 2A01            CMP              R2, #1
  116 0000003E D1F7            BNE              LoopLCD3
  117 00000040         
  118 00000040 4904            LDR              R1, =GPIO_PORTA_DATA_R
  119 00000042 680A            LDR              R2, [R1]
  120 00000044 F042 0240       ORR              R2, #0x40
  121 00000048 600A            STR              R2, [R1]
  122 0000004A         
  123 0000004A 4903            LDR              R1, =SSI0_DR_R
  124 0000004C 7008            STRB             R0, [R1]
  125 0000004E         
  126 0000004E 4770            BX               LR          ;   return
  127 00000050         
  128 00000050         
  129 00000050         ;***************************************************
  130 00000050         ; This is a library for the Adafruit 1.8" SPI display.
  131 00000050         ; This library works with the Adafruit 1.8" TFT Breakout
                        w/SD card
  132 00000050         ; ----> http://www.adafruit.com/products/358
  133 00000050         ; as well as Adafruit raw 1.8" TFT display
  134 00000050         ; ----> http://www.adafruit.com/products/618
  135 00000050         ;
  136 00000050         ; Check out the links above for our tutorials and wiring
                        diagrams
  137 00000050         ; These displays use SPI to communicate, 4 or 5 pins are
                        required to
  138 00000050         ; interface (RST is optional)
  139 00000050         ; Adafruit invests time and resources providing this ope
                       n source code,
  140 00000050         ; please support Adafruit and open-source hardware by pu
                       rchasing
  141 00000050         ; products from Adafruit!
  142 00000050         ;



ARM Macro Assembler    Page 4 


  143 00000050         ; Written by Limor Fried/Ladyada for Adafruit Industries
                       .
  144 00000050         ; MIT license, all text above must be included in any re
                       distribution
  145 00000050         ;****************************************************
  146 00000050         
  147 00000050                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  148 00000050                 END                          ; end of file
              4000800C 
              400043FC 
              40008008 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\lcd.d -o.\lcd.o -I.\RTE\_BuckHunt -IC:\Users\ehall\AppData\Local
\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\ehall\AppData\Local\Ar
m\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL SETA 1" 
--predefine="__UVISION_VERSION SETA 536" --predefine="_RTE_ SETA 1" --predefine
="TM4C123GH6PM SETA 1" --predefine="_RTE_ SETA 1" --list=.\lcd.lst LCD.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 30 in file LCD.s
   Uses
      None
Comment: .text unused
LoopLCD1 00000000

Symbol: LoopLCD1
   Definitions
      At line 65 in file LCD.s
   Uses
      At line 71 in file LCD.s
Comment: LoopLCD1 used once
LoopLCD2 0000001E

Symbol: LoopLCD2
   Definitions
      At line 84 in file LCD.s
   Uses
      At line 90 in file LCD.s
Comment: LoopLCD2 used once
LoopLCD3 00000030

Symbol: LoopLCD3
   Definitions
      At line 110 in file LCD.s
   Uses
      At line 116 in file LCD.s
Comment: LoopLCD3 used once
writecommand 00000000

Symbol: writecommand
   Definitions
      At line 56 in file LCD.s
   Uses
      At line 27 in file LCD.s
Comment: writecommand used once
writedata 00000030

Symbol: writedata
   Definitions
      At line 104 in file LCD.s
   Uses
      At line 28 in file LCD.s
Comment: writedata used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTA_DATA_R 400043FC

Symbol: GPIO_PORTA_DATA_R
   Definitions
      At line 22 in file LCD.s
   Uses
      At line 73 in file LCD.s
      At line 118 in file LCD.s

GPIO_PORTD_DATA_R 400073FC

Symbol: GPIO_PORTD_DATA_R
   Definitions
      At line 23 in file LCD.s
   Uses
      None
Comment: GPIO_PORTD_DATA_R unused
SSI0_DR_R 40008008

Symbol: SSI0_DR_R
   Definitions
      At line 24 in file LCD.s
   Uses
      At line 78 in file LCD.s
      At line 123 in file LCD.s

SSI0_SR_R 4000800C

Symbol: SSI0_SR_R
   Definitions
      At line 25 in file LCD.s
   Uses
      At line 66 in file LCD.s
      At line 85 in file LCD.s
      At line 111 in file LCD.s

4 symbols
346 symbols in table
